{"version":3,"sources":["components/app-header/app-header.js","components/search-panel/search-panel.js","components/post-status-filter/post-status-filter.js","components/post-list-item/post-list-item.js","components/post-list/post-list.js","components/post-add-form/post-add-form.js","components/app/app.js","index.js"],"names":["AppHeader","liked","allPosts","className","SearchPanel","props","state","term","onUpdateSearch","bind","e","target","value","this","setState","type","placeholder","onChange","Component","PostStatusFilter","buttons","name","label","map","filter","onFilterSelect","clazz","onClick","PostListItem","onDelete","onToggleImportant","onToggleLiked","classNames","important","like","PostList","posts","elements","item","id","itemProps","PostAddForm","text","onValueChange","onSubmit","preventDefault","onAdd","App","data","deleteItem","addItem","maxId","index","findIndex","elem","before","slice","after","body","newItem","old","items","lenght","indexOf","length","visiblePosts","filterPost","searchPost","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c6fa4aee.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport './app-header.css';\r\n\r\nconst AppHeader = ({liked, allPosts}) => {\r\n    return (\r\n        <div className=\"app-header d-flex\">\r\n            <h1>Rykov Vitaly</h1>\r\n            <h2>{allPosts} записей, из них понравилось {liked}</h2>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AppHeader;","import React, { Component } from 'react';\r\n\r\nimport './search-panel.css';\r\n\r\nexport default class SearchPanel extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            term: ''\r\n        }\r\n        this.onUpdateSearch = this.onUpdateSearch.bind(this)\r\n    }\r\n\r\n    onUpdateSearch(e) {\r\n        const term = e.target.value;\r\n        this.setState({term});\r\n        this.props.onUpdateSearch(term);\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <input\r\n            className=\"form-control search-input\"\r\n            type=\"text\"\r\n            placeholder=\"Поиск по записям\"\r\n            onChange={this.onUpdateSearch}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\n","import React, { Component } from 'react';\r\n\r\nimport './post-status-filter.css';\r\n\r\nexport default class PostStatusFilter extends Component {\r\n    constructor (props) {\r\n        super(props);\r\n        this.buttons = [\r\n            {name: 'all', label: 'Все'},\r\n            {name: 'like', label: 'Понравилось'}\r\n        ]\r\n    }\r\n    render () {\r\n        const buttons = this.buttons.map(({name, label}) => {\r\n            const {filter, onFilterSelect} = this.props;\r\n            const active = filter === name;\r\n            const clazz = active ? 'btn-info' : 'btn-outline-secondary';\r\n            return (\r\n                <button \r\n                key={name} \r\n                type=\"button\" \r\n                className={`btn ${clazz}`}\r\n                onClick={() => onFilterSelect(name)}\r\n                >{label}</button>\r\n            )\r\n        });\r\n        return (\r\n            <div className=\"btn-group\">\r\n                {buttons}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n","import React, {Component} from 'react';\r\n\r\nimport './post-list-item.css';\r\n\r\nexport default class PostListItem extends Component {\r\n    \r\n\r\n    render () {\r\n        const {label, onDelete, onToggleImportant, onToggleLiked, important, like} = this.props;\r\n        \r\n        let classNames = \"app-list-item d-flex justify-content-between\";\r\n        if (important) {\r\n        classNames +=' important';\r\n    }\r\n\r\n    if (like) {\r\n        classNames +=' like';\r\n    }\r\n\r\n        return (\r\n        <div className={classNames}>\r\n            <span \r\n            className=\"app-list-item-label\"\r\n            onClick={onToggleLiked}>\r\n                {label}\r\n            </span>\r\n            <div className=\"d-flex justify-content-center align-items-center\">\r\n                <button \r\n                type=\"button\" \r\n                className=\"btn-star btn-sm\"\r\n                onClick={onToggleImportant}>\r\n                    <i className=\"fa fa-star\"></i>\r\n                </button>\r\n                <button type=\"button\" className=\"btn-trash btn-sm\"\r\n                onClick={onDelete} >\r\n                    <i className=\"fa fa-trash-o\"></i>\r\n                </button>\r\n                <i className=\"fa fa-heart\"></i>\r\n            </div>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n","import React from 'react';\r\nimport PostListItem from '../post-list-item/post-list-item';\r\n\r\nimport './post-list.css';\r\n\r\nconst PostList = ({posts, onDelete, onToggleImportant, onToggleLiked}) => {\r\n\r\n    const elements = posts.map((item) =>{\r\n        const {id, ...itemProps} = item;\r\n        return (\r\n            <li key={id} className=\"list-group-item\">\r\n                <PostListItem \r\n                {...itemProps}\r\n                onDelete={() => onDelete(id)}\r\n                onToggleImportant={() => onToggleImportant(id)}\r\n                onToggleLiked={() => onToggleLiked(id)}/>\r\n            </li>\r\n        )\r\n    });\r\n\r\n    return (\r\n        <ul className=\"app-list list-group\">\r\n            {elements}\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default PostList;","import React, {Component} from 'react';\r\n\r\nimport './post-add-form.css';\r\n\r\nexport default class PostAddForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            text: ''\r\n        }\r\n        this.onValueChange = this.onValueChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    onValueChange(e) {\r\n        this.setState({\r\n            text: e.target.value\r\n        })\r\n    }\r\n\r\n    onSubmit (e) {\r\n        e.preventDefault();\r\n        this.props.onAdd(this.state.text)\r\n        this.setState({\r\n            text: ''\r\n        });\r\n    }\r\n\r\n    render (){\r\n        return (\r\n            <form className=\"bottom-panel d-flex\"\r\n            onSubmit={this.onSubmit}>\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"О чем Вы думаете?\"\r\n                    className=\"form-control new-post-label\"\r\n                    onChange={this.onValueChange}\r\n                    value={this.state.text}\r\n                />\r\n                <button \r\n                    type=\"submit\"\r\n                    className=\"btn btn-outline-secondary\">\r\n                    Добавить</button>\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\n","import React, {Component} from 'react';\r\nimport AppHeader from '../app-header/app-header';\r\nimport SearchPanel from '../search-panel/search-panel';\r\nimport PostStatusFilter from '../post-status-filter/post-status-filter';\r\nimport PostList from '../post-list/post-list';\r\nimport PostAddForm from '../post-add-form/post-add-form';\r\n\r\nimport './app.css';\r\n\r\nexport default class App extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            data : [\r\n                {label: 'Going to learn React', important: true, like: false, id: 1},\r\n                {label: 'That is so good', important: false, like: false, id: 2},\r\n                {label: 'I need a break', important: false, like: false, id: 3}\r\n            ],\r\n            term: '',\r\n            filter: 'all'\r\n        };\r\n        this.deleteItem = this.deleteItem.bind(this);\r\n        this.addItem = this.addItem.bind(this);\r\n        this.onToggleImportant = this.onToggleImportant.bind(this);\r\n        this.onToggleLiked = this.onToggleLiked.bind(this);\r\n        this.onUpdateSearch = this.onUpdateSearch.bind(this);\r\n        this.onFilterSelect = this.onFilterSelect.bind(this);\r\n\r\n        this.maxId = 4;\r\n    }\r\n    \r\n    deleteItem(id) {\r\n        this.setState(({data}) => {\r\n            const index = data.findIndex(elem => elem.id === id);\r\n            \r\n            const before = data.slice(0, index);\r\n            const after = data.slice(index + 1);\r\n            const newArr = [...before, ...after];\r\n\r\n            return {\r\n                data: newArr\r\n            }\r\n        });\r\n    }\r\n\r\n    addItem(body) {\r\n        const newItem = {\r\n            label: body,\r\n            important: false,\r\n            id: this.maxId++\r\n        }\r\n        this.setState(({data}) => {\r\n            const newArr = [...data, newItem];\r\n            return {\r\n                data: newArr\r\n            }\r\n        });\r\n    }\r\n\r\n    onToggleImportant (id) {\r\n        this.setState(({data}) => {\r\n            const index = data.findIndex(elem => elem.id === id);\r\n\r\n            const old = data[index];\r\n            const newItem = {...old, important: !old.important};\r\n\r\n            const newArr = [...data.slice(0, index), newItem, ...data.slice(index + 1)];\r\n\r\n            return {\r\n                data: newArr\r\n            }\r\n        });\r\n    }\r\n\r\n    onToggleLiked (id) {\r\n        this.setState(({data}) => {\r\n            const index = data.findIndex(elem => elem.id === id);\r\n\r\n            const old = data[index];\r\n            const newItem = {...old, like: !old.like};\r\n\r\n            const newArr = [...data.slice(0, index), newItem, ...data.slice(index + 1)];\r\n\r\n            return {\r\n                data: newArr\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n    searchPost (items, term) {\r\n        if (term.lenght === 0) {\r\n            return items\r\n        }\r\n        return items.filter((item) => {\r\n            return item.label.indexOf(term) > -1\r\n        });\r\n    }\r\n\r\n    filterPost (items, filter) {\r\n        if (filter === 'like') {\r\n            return items.filter(item => item.like)\r\n        } else {\r\n            return items\r\n        }\r\n    }\r\n\r\n    onUpdateSearch(term) {\r\n        this.setState({term})\r\n    } \r\n\r\n    onFilterSelect(filter) {\r\n        this.setState({filter})\r\n    }\r\n\r\n    render () {\r\n        const {data, term, filter} = this.state;\r\n\r\n        const liked = data.filter(item => item.like).length;\r\n        const allPosts = data.length;\r\n\r\n        const visiblePosts = this.filterPost(this.searchPost(data, term), filter);\r\n\r\n        return (\r\n        \r\n            <div className=\"app\">\r\n                <AppHeader\r\n                liked={liked}\r\n                allPosts={allPosts}/>\r\n                <div className=\"search-panel d-flex\">\r\n                    <SearchPanel\r\n                    onUpdateSearch={this.onUpdateSearch}/>\r\n                    <PostStatusFilter\r\n                    filter={filter}\r\n                    onFilterSelect={this.onFilterSelect}/>\r\n                </div>\r\n                    <PostList \r\n                        posts ={visiblePosts} \r\n                        onDelete={this.deleteItem}\r\n                        onToggleImportant={this.onToggleImportant} \r\n                        onToggleLiked={this.onToggleLiked} />\r\n                    <PostAddForm\r\n                        onAdd={this.addItem}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/app/app';\r\n\r\nimport './index.css';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\n"],"sourceRoot":""}